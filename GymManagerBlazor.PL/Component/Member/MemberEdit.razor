@page "/members/edit/{Id:int}"
@using GymManagerBlazor.BUS.Models
@using GymManagerBlazor.BUS.Services.Interface
@inject IMemberService MemberService
@inject NavigationManager Navigation

<h3>Chỉnh Sửa Thành Viên</h3>

@if (MemberToEdit != null)
{
    <EditForm Model="MemberToEdit" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Tên:</label>
            <InputText @bind-Value="MemberToEdit.Name" />
        </div>
        <div>
            <label>Email:</label>
            <InputText @bind-Value="MemberToEdit.Email" />
        </div>
        <div>
            <label>Điện Thoại:</label>
            <InputText @bind-Value="MemberToEdit.Phone" />
        </div>
        <div>
            <label>Loại Thẻ:</label>
            <InputText @bind-Value="MemberToEdit.MembershipType" />
        </div>
        <div>
            <label>Ngày Tham Gia:</label>
            <InputDate @bind-Value="MemberToEdit.JoinDate" />
        </div>

        <button type="submit">Cập Nhật</button>
        <button @onclick="GoBack">Hủy</button>
    </EditForm>
}
else
{
    <p>Đang tải dữ liệu...</p>
}

@code {
    [Parameter] public int Id { get; set; }
    private MemberModel MemberToEdit { get; set; }

    protected override async Task OnInitializedAsync()
    {
        MemberToEdit = await MemberService.GetMemberByIdAsync(Id);
    }

    private async Task HandleValidSubmit()
    {
        await MemberService.UpdateMemberAsync(Id, MemberToEdit);
        Navigation.NavigateTo("/members-list");
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/members-list");
    }
}
